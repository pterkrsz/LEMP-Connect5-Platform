üîß 1. ALAPRENDSZER FEL√âP√çT√âSE (LEMP)
 Adatb√°zismodell l√©trehoz√°sa k√∂zint√©zm√©nyi t√∂rzsadatokra

 Adatb√°zismodell l√©trehoz√°sa alm√©r≈ëk t√∂rzsadat√°ra √©s m√©r√©si adataira

 Adatb√°zismodell l√©trehoz√°sa szenzorok t√∂rzsadat√°ra √©s m√©r√©seire

 Adatb√°zismodell l√©trehoz√°sa inverter √©s KI/BE t√≠pus√∫ eszk√∂z√∂kre

 Adatb√°zismodellben √©rv√©nyess√©gi d√°tum, GPS koordin√°t√°k kezel√©se

 5 √©s 15 perces mintav√©telez√©s kezel√©s√©nek kialak√≠t√°sa (k√ºl√∂n adatt√°bl√°k vagy mez≈ëk)

 REST API v√°z (OpenAPI specifik√°ci√≥val) l√©trehoz√°sa

 Swagger UI publik√°l√°sa

 Napl√≥z√°si rendszer l√©trehoz√°sa minden REST h√≠v√°sr√≥l

 Jogosults√°gkezel√©si rendszer (RBAC) implement√°l√°sa

 Felhaszn√°l√≥i szerepk√∂r√∂k kezel√©se: admin, oper√°tor, csak olvas√≥

 Riport gener√°l√≥ modul alapjainak l√©trehoz√°sa (CSV, PDF)

üîå 2. K√ñTELEZ≈ê INTERF√âSZEK IMPLEMENT√ÅL√ÅSA (LEMP ‚Üí KEP)
Adatinterf√©szek:
 Alm√©r≈ë t√∂rzsadat interf√©sz (1) ‚Äì REST endpoint l√©trehoz√°sa, JSON form√°tumban

 Alm√©r≈ë m√©r√©si adat interf√©sz (2) ‚Äì REST endpoint, id≈ëb√©lyeges 3 f√°zis√∫ adatokkal

 Szenzor t√∂rzsadat interf√©sz (3) ‚Äì REST endpoint, eszk√∂zinform√°ci√≥k lek√©rdez√©se

 Szenzor m√©r√©si adat interf√©sz (4) ‚Äì REST endpoint, JSON szenzoradatok

 K√∂zint√©zm√©nyi t√∂rzsadat interf√©sz (5) ‚Äì REST endpoint, telephely, √©p√ºlet, kapcsolattart√≥ adatokkal

Szolg√°ltat√°s interf√©szek (ir√°ny: KEP ‚Üí LEMP):
 Inverter vez√©rl√©s interf√©sz (6) ‚Äì vez√©rl√©si REST API + eszk√∂zre ir√°nyul√≥ met√≥dush√≠v√°s

 KI/BE t√≠pus√∫ eszk√∂z vez√©rl√©s interf√©sz (7) ‚Äì rel√©kapcsol√°si REST API

üîê 3. BIZTONS√ÅG
 HTTPS tan√∫s√≠tv√°nyok be√°ll√≠t√°sa

 REST API endpointok hiteles√≠t√©se OAuth2-vel

 Token-alap√∫ hozz√°f√©r√©s (JWT) bevezet√©se

 API kulcs rendszer t√°mogat√°sa (pl. partnerint√©zm√©nyekre)

 CORS szab√°lyoz√°s (enged√©lyezett domainek)

 Rate limiting (pl. percenk√©nti k√©r√©skorl√°t)

 IP-alap√∫ enged√©lyez√©si lista t√°mogat√°sa

 Id≈ëb√©lyeg haszn√°lata minden kimen≈ë REST h√≠v√°sban

 Checksum vagy digit√°lis al√°√≠r√°s haszn√°lata (ha sz√ºks√©ges)

 Adatok napl√≥z√°sa audit c√©lra (id≈ëb√©lyeg, felhaszn√°l√≥, m≈±velet t√≠pusa)

 Adatb√°zison bel√ºli √©rz√©keny adatok titkos√≠t√°sa vagy hashel√©se

üß† 4. ELEMZ√âS √âS MENETREND GENER√ÅL√ÅS
 AI/ML-alap√∫ fogyaszt√°s/termel√©s predikci√≥s modul alapjainak lefektet√©se

 K√ºls≈ë id≈ëj√°r√°si API integr√°l√°sa (pl. napsug√°rz√°s, felh≈ëz√∂tts√©g)

 Id≈ëalap√∫ aggreg√°lt adatok el≈ë√°ll√≠t√°sa (pl. napi/havi fogyaszt√°s)

 Villamos menetrend javaslat gener√°l√°sa (saj√°t bels≈ë haszn√°latra)

 Menetrendek k√ºl√∂nv√°laszt√°sa KEP vez√©rl√©si parancsokt√≥l (priorit√°si logika)

üßæ 5. FELHASZN√ÅL√ìI FEL√úLET (OPCION√ÅLIS)
 Alm√©r≈ëk, szenzorok √©s √©p√ºletek adatainak kezel√©se

 Diagrammos adatmegjelen√≠t√©s (pl. Chart.js vagy grafikon k√∂nyvt√°r)

 Id≈ëszak sz≈±r√©s (5-15 perces bont√°s)

 Int√©zm√©nyi adatok szerkeszt√©se UI-n kereszt√ºl

 Manu√°lis riportgener√°l√°s (pl. havi fogyaszt√°s, predikci√≥k √∂sszehasonl√≠t√°sa)

üß™ 6. TESZTEL√âS
 Egys√©gtesztek a logik√°ra √©s adatt√°rol√°sra (xUnit, Moq)

 REST API endpoint integr√°ci√≥s tesztek (pl. Swagger + Postman)

 Biztons√°gi tesztek (token hamis√≠t√°s, replay t√°mad√°s, jogosults√°gi pr√≥b√°k)

 Stresszteszt REST API v√©gpontokra

 Adatform√°tum valid√°ci√≥s tesztek (JSON s√©ma, k√∂telez≈ë mez≈ëk)

üì¶ 7. TELEP√çT√âS, KARBANTART√ÅS
 Docker-alap√∫ kont√©neriz√°ci√≥ (ha sz√ºks√©ges)

 K√ºl√∂n dev/staging/prod k√∂rnyezet t√°mogat√°s

 API verzi√≥kezel√©s (v1/v2 √∫tvonalak)

 Automatikus backup (naponta adatb√°zis snapshot)

 Watchdog szolg√°ltat√°s (rendszer√©l√©s figyel√©s, √∫jraind√≠t√°s)

 Felhaszn√°l√≥i k√©zik√∂nyv √©s API dokument√°ci√≥ elk√©sz√≠t√©se